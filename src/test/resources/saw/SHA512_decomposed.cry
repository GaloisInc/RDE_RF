module SHA512_decomposed where

import SHA512_easy

type MessageScheduleState = [16][64]

MessageSchedule_next5 : MessageScheduleState -> [5][64]
MessageSchedule_next5 M = take`{5} M

MessageSchedule_step : MessageScheduleState -> MessageScheduleState
MessageSchedule_step M = drop`{5} W
  where
    W : [16+5][64]
    W @ (t : [7]) =
      if (t < 16) then
        M @ t
      else
        sigma1 (W @ (t - 2)) + W @ (t - 7) +
        sigma0 (W @ (t - 15)) + W @ (t - 16)

compress5 : [5][64] -> [5][64] -> State -> State
compress5 ks ws h0 = hf
  where
    prev, next : [5]State
    prev # [hf] = [h0] # next
    next = [ compress1 k w h | k <- ks | w <- ws | h <- prev ]

RoundKey : [4] -> [5][64]
RoundKey i = K @ i
  where
    K : [16][5][64]
    K =
      [[0x428a2f98d728ae22, 0x7137449123ef65cd, 0xb5c0fbcfec4d3b2f, 0xe9b5dba58189dbbc, 0x3956c25bf348b538],
       [0x59f111f1b605d019, 0x923f82a4af194f9b, 0xab1c5ed5da6d8118, 0xd807aa98a3030242, 0x12835b0145706fbe],
       [0x243185be4ee4b28c, 0x550c7dc3d5ffb4e2, 0x72be5d74f27b896f, 0x80deb1fe3b1696b1, 0x9bdc06a725c71235],
       [0xc19bf174cf692694, 0xe49b69c19ef14ad2, 0xefbe4786384f25e3, 0x0fc19dc68b8cd5b5, 0x240ca1cc77ac9c65],
       [0x2de92c6f592b0275, 0x4a7484aa6ea6e483, 0x5cb0a9dcbd41fbd4, 0x76f988da831153b5, 0x983e5152ee66dfab],
       [0xa831c66d2db43210, 0xb00327c898fb213f, 0xbf597fc7beef0ee4, 0xc6e00bf33da88fc2, 0xd5a79147930aa725],
       [0x06ca6351e003826f, 0x142929670a0e6e70, 0x27b70a8546d22ffc, 0x2e1b21385c26c926, 0x4d2c6dfc5ac42aed],
       [0x53380d139d95b3df, 0x650a73548baf63de, 0x766a0abb3c77b2a8, 0x81c2c92e47edaee6, 0x92722c851482353b],
       [0xa2bfe8a14cf10364, 0xa81a664bbc423001, 0xc24b8b70d0f89791, 0xc76c51a30654be30, 0xd192e819d6ef5218],
       [0xd69906245565a910, 0xf40e35855771202a, 0x106aa07032bbd1b8, 0x19a4c116b8d2d0c8, 0x1e376c085141ab53],
       [0x2748774cdf8eeb99, 0x34b0bcb5e19b48a8, 0x391c0cb3c5c95a63, 0x4ed8aa4ae3418acb, 0x5b9cca4f7763e373],
       [0x682e6ff3d6b2b8a3, 0x748f82ee5defb2fc, 0x78a5636f43172f60, 0x84c87814a1f0ab72, 0x8cc702081a6439ec],
       [0x90befffa23631e28, 0xa4506cebde82bde9, 0xbef9a3f7b2c67915, 0xc67178f2e372532b, 0xca273eceea26619c],
       [0xd186b8c721c0c207, 0xeada7dd6cde0eb1e, 0xf57d4f7fee6ed178, 0x06f067aa72176fba, 0x0a637dc5a2c898a6],
       [0x113f9804bef90dae, 0x1b710b35131c471b, 0x28db77f523047d84, 0x32caab7b40c72493, 0x3c9ebe0a15c9bebc],
       [0x431d67c49c100d4c, 0x4cc5d4becb3e42b6, 0x597f299cfc657e2a, 0x5fcb6fab3ad6faec, 0x6c44198c4a475817]]

addState : State -> State -> State
addState h0 hf = [ x + y | x <- h0 | y <- hf ]

type ProcessBlockState = [4 + 512 + 512 + 1024]

ProcessBlock_init : State -> [16][64] -> ProcessBlockState
ProcessBlock_init h0 m0 = 0 # join_8_64 h0 # join_8_64 h0 # join_16_64 m0

ProcessBlock_step : ProcessBlockState -> ProcessBlockState
ProcessBlock_step (i # h0 # h_prev_ # m_prev_) =
  (i + 1) # h0 # join_8_64 h_next # join_16_64 m_next
  where
    h_next = compress5 (RoundKey i) (MessageSchedule_next5 m_prev) h_prev
    m_next = MessageSchedule_step m_prev
    h_prev = split h_prev_
    m_prev = split m_prev_

ProcessBlock_final : ProcessBlockState -> State
ProcessBlock_final ((_:[4]) # h0_ # hf_ # (_:[1024])) = addState h0 hf
  where
    h0 = split h0_
    hf = split hf_

MessageSchedule_decomposed : [16][64] -> _
MessageSchedule_decomposed m0 = ws
  where
    ms : [16]MessageScheduleState
    ms = [m0] # [ MessageSchedule_step m | m <- take`{15} ms ]

    ws : [16][5][64]
    ws = [ MessageSchedule_next5 m | m <- ms ]

ProcessBlock_decomposed : State -> [16][64] -> State
ProcessBlock_decomposed h0 m0 = ProcessBlock_final sf
  where
    s_init, s_tail : [16]ProcessBlockState
    s_init # [sf] = [ProcessBlock_init h0 m0] # s_tail
    s_tail = [ ProcessBlock_step s | s <- s_init ]

/***

ProcessBlock_decomposed : State -> [16][64] -> State
ProcessBlock_decomposed h0 m0 = addState h0 h_final
  where
    ms : [16]MessageScheduleState
    ms = [m0] # [ MessageSchedule_step m | m <- take`{15} ms ]

    h_prev, h_next : [16]State
    h_prev # [h_final] = [h0] # h_next
    h_next = [ compress5 k w h | k <- ks | w <- ws | h <- h_prev ]

    ws : [16][5][64]
    ws = [ MessageSchedule_next5 m | m <- ms ]

    ks : [16][5][64]
    ks = [ RoundKey i | i <- [0..15] ]

***/
